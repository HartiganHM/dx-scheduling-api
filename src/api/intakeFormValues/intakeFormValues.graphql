type IntakeFormValues {
  id: ID!
  date: String!
  servicesRequested: [String!]!
  client: Client!
}

input IntakeFormValuesInput {
  id: ID!
}

input IntakeFormValuesWhereUniqueInput {
  id: ID
}

input IntakeFormValuesCreateInput {
  date: String!
  servicesRequested: IntakeFormValuesCreateservicesRequestedInput
  client: ClientCreateOneInput!
}

input IntakeFormValuesCreateOneInput {
  create: IntakeFormValuesCreateInput
}

input IntakeFormValuesCreateservicesRequestedInput {
  set: [String!]
}

input IntakeFormValuesUpdateInput {
  date: String
  servicesRequested: [String]
  client: ClientUpdateOneRequiredInput
}

input IntakeFormValuesUpdateservicesRequestedInput {
  set: [String!]
}

input IntakeFormValuesUpdateDataInput {
  date: String
  servicesRequested: [String]
  client: ClientUpdateOneRequiredInput
}

input IntakeFormValuesUpdateOneRequiredInput {
  update: IntakeFormValuesUpdateDataInput
}

extend type Query {
  intakeFormValues(where: IntakeFormValuesWhereUniqueInput!): IntakeFormValues
  intakeFormValueses: [IntakeFormValues]!
}

extend type Mutation {
  createIntakeFormValues(input: IntakeFormValuesCreateInput!): IntakeFormValues!
  deleteIntakeFormValues(
    where: IntakeFormValuesWhereUniqueInput
  ): IntakeFormValues!
  updateIntakeFormValues(
    input: IntakeFormValuesUpdateInput
    where: IntakeFormValuesWhereUniqueInput
  ): IntakeFormValues!
}
