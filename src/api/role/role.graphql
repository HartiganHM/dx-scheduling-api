type Role {
  id: ID!
  name: String!
  permissions: [Permission!]!
  users: [User!]!
}

input RoleInput {
  id: ID!
}

input RoleCreateInput {
  name: String!
}

input RoleUpdateInput {
  name: String
}

input RoleWhereUniqueInput {
  id: ID!
}

extend type Query {
  role(where: RoleInput!): Role
  roles: [Role]!
}

extend type Mutation {
  createRole(input: RoleCreateInput!): Role!
  updateRole(input: RoleUpdateInput!, where: RoleWhereUniqueInput!): Role!
}