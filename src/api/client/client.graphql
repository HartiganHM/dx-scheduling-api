type Client {
  id: ID!
  firstName: String!
  lastName: String!
  dob: String!
  gender: String!
  school: String!
  grade: String!
  parents: [Parent!]!
}

input ClientInput {
  id: ID!
}

input ClientCreateInput {
  firstName: String!
  lastName: String!
  dob: String!
  gender: String!
  school: String!
  grade: String!
  parents: ParentCreateManyInput!
}

input ClientUpdateInput {
  firstName: String
  lastName: String
  dob: String
  gender: String
  school: String
  grade: String
  parents: ParentUpdateManyInput
}

input ClientWhereUniqueInput {
  id: ID!
}

extend type Query {
  client(input: ClientInput!): Client
  clients: [Client]!
}

extend type Mutation {
  createClient(input: ClientCreateInput!): Client!
  deleteClient(where: ClientWhereUniqueInput!): Client!
  updateClient(
    input: ClientUpdateInput!
    where: ClientWhereUniqueInput!
  ): Client!
}
